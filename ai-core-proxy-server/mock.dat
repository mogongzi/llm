data: {"type":"message_start","message":{"id":"msg_bdrk_01C9naoPcSsxdTQxwBAz48oH","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[],"stop_reason":null,"stop_sequence":null,"usage":{"input_tokens":15,"cache_creation_input_tokens":0,"cache_read_input_tokens":0,"output_tokens":8}}}

data: {"type":"content_block_start","index":0,"content_block":{"type":"text","text":""}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"I'll create a simple neural network from"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" scratch using NumPy."}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" Here's a complete"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" implementation with"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" explan"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"ations:\n\n```python\nimport numpy"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" as np\nimport matplotlib"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":".pyplot as plt\n\nclass Simple"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"N"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"euralNetwork:\n    def"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" __init__(self, input_size"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":", hidden_size, output_size"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":","}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" learning_rate=0.01):"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\n        \"\"\"\n        Initialize a"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" simple neural network with"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" one"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" hidden layer"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\n        \n        Args"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":":\n            input_size: Number"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" of input features\n            hidden_size"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":": Number of neurons in hidden layer"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\n            output_size: Number of output"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" neurons"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\n            learning_rate: Learning rate"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" for gradient descent\n        \"\"\"\n        "}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"self.learning"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"_rate = learning_rate\n        "}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\n        # Initialize weights and biases with"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" small random values\n        self.W"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"1 = np.random.ran"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"dn(input_size, hidden_"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"size) * 0.5"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\n        self.b1 ="}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" np.zeros((1, hidden_"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"size))\n        self.W2"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" = np.random.randn"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"(hidden_size, output_size"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":") * 0.5\n        "}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"self.b2 = np."}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"zeros((1, output_size))"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\n        \n        # Store"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" activ"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"ations for back"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"propagation\n        self."}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"z"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"1 = None"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\n        self.a"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"1 = None\n        self."}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"z2 = None\n        self"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":".a2 = None\n    "}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\n    def sigmoi"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"d(self, x):\n        \"\"\""}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"Sigmoid activation function\"\"\"\n        #"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" Clip"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" x"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" to prevent"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" overflow\n        x ="}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" np.clip(x, -500"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":", 500)\n        return "}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"1 / (1 + np"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":".exp(-x))\n    "}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\n    def sigmoi"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"d_derivative(self, x):"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\n        \"\"\"Derivative of sigmoid function"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\"\"\"\n        return x * (1"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" - x)\n    \n    "}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"def forward(self, X):"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\n        \"\"\""}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\n        Forward propag"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"ation"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\n        \n        Args:\n            X"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":": Input data"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" (batch"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"_size, input_size)"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\n        "}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\n        Returns:\n            Output"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" predictions\n        \"\"\"\n        #"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" Hidden"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" layer"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\n        self.z1 = np"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":".dot(X, self.W"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"1) + self.b1"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\n        self.a1 = self"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":".sigmoid(self.z1)"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\n        \n        # Output layer"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\n        self.z2 = np"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":".dot(self.a1,"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" self.W2) + self."}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"b2\n        self.a2"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" = self.sigmoid(self."}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"z2)\n        \n        return"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" self.a2\n    \n    "}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"def backward(self, X, y"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":", output"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"):"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\n        \"\"\"\n        Backward propag"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"ation\n        \n        Args:"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\n            X: Input data"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\n            y: True"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" labels"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\n            output: Predicted output from"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" forwar"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"d pass\n        \"\"\"\n        m"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" = X.shape[0]  "}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"# number"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" of examples"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\n        \n        # Calculate"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" gradients for"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" output layer\n        dZ"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"2 = output - y\n        "}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"dW2 = ("}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"1/m) * np.dot"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"(self.a1.T,"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" dZ2)\n        db2"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" = (1/m) *"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" np.sum(dZ2,"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" axis=0, keepdims="}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"True)\n        \n        # Calculate"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" gradients for hidden layer\n        "}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"dA"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"1 = np.dot("}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"dZ2, self.W2."}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"T)"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\n        dZ"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"1 = dA1 *"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" self.sigmoid_derivative(self."}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"a1)\n        dW1"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" = (1/m) *"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" np.dot(X.T,"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" dZ1)\n        db1"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" = (1/m) *"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" np.sum(dZ1,"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" axis=0, keepdims="}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"True)\n        \n        # Update"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" weights and biases\n        self."}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"W2"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" -="}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" self.learning_rate * dW"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"2\n        self.b2 "}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"-= self.learning_rate * db"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"2\n        self.W1 "}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"-= self.learning_rate * "}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"dW1\n        self.b1"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" -= self.learning_rate *"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" db1\n    \n    def train"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"(self, X, y, epochs"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"=1000, verbose"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"=True"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"):\n        \"\"\"\n        Train the"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" neural network\n        \n        Args:"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\n            X: Training"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" data"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\n            y: Training labels\n            epochs"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":": Number of training epochs"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\n            verbose: Print"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" training"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" progress\n        \"\"\"\n        losses"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" = []\n        \n        for epoch"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" in range(epochs):\n            #"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" Forward propagation\n            output"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" = self.forward(X)"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\n            \n            # Calculate"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" loss ("}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"mean"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" squared error)\n            loss = np"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":".mean((output - y) **"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" 2)\n            losses"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":".append(loss)\n            "}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\n            # Backward propagation\n            "}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"self.backward(X, y,"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" output)\n            \n            # Print"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" progress\n            if verbose and epoch %"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" 100 == 0:"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\n                print(f\""}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"Epoch {epoch},"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" Loss: {loss:.6"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"f}\")\n        \n        return losses"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\n    \n    def predict(self"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":", X):\n        \"\"\"Make"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" predictions on"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" new data\"\"\"\n        return self."}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"forward(X)"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\n\n# Example usage:"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" X"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"OR problem"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\ndef create_xor_dataset"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"():"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\n    \"\"\"Create XOR dataset for"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" testing"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\"\"\"\n    X"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" = np.array([[0, "}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"0],"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\n                  [0, 1"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"],\n                  [1, "}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"0],\n                  [1,"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" 1]])\n    "}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\n    y = np.array([[0"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"],\n                  [1],"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\n                  [1],\n                  "}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"[0]])\n    \n    return"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" X, y\n\n# Example"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" usage:"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" Binary"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" classification with"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" more"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" complex"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" data\ndef create_circle"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"_dataset("}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"n_samples=200"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"):"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\n    \"\"\"Create a circular"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" decision"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" boundary dataset\"\"\"\n    np"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":".random.seed(42)"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\n    \n    #"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" Generate points"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\n    X = np.random.ran"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"dn(n_samples, 2"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":")"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\n    "}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\n    # Create circular"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" decision boundary\n    y"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" = ("}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"X[:, 0]"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"**2 + X[:, "}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"1]**2 "}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"< 1)."}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"astype(int)."}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"reshape"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"(-1, 1)\n    "}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\n    return X, y\n\n#"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" Test"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" the neural"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" network\nif"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" __name__ == \"__main__\":"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\n    print"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"(\"Testing Neural"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" Network on"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" XOR Problem"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\")\n    print"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"(\"=\" * 40"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":")\n    \n    # Create X"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"OR dataset\n    X, y ="}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" create_xor_dataset()"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\n    \n    # Create an"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"d train neural"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" network\n    nn = SimpleNeu"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"ralNetwork(input_size=2"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":", hidden_size=4"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":", output_size=1"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":","}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" learning_rate=10"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":")\n    losses = nn.train"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"(X, y, epochs=2"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"000, verbose=True)\n    "}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\n    # Test"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" predictions\n    print(\"\\nX"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"OR"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" Predictions:\")\n    predictions = nn."}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"predict(X)\n    for"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" i in"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" range(len(X"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":")):\n        print(f\"Input"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":": {X[i]}, Target"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":": {y[i]["}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"0]}, Prediction: {predictions"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"[i][0]:.4"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"f}\")\n    \n    # Plot"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" training loss\n    plt.figure("}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"figsize=(12"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":", 4))\n    "}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\n    plt.subplot(1, "}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"2, 1)\n    plt"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":".plot(losses)\n    plt"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":".title('Training Loss ("}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"X"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"OR)')\n    plt.xlabel('"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"Epoch')\n    plt.ylabel"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"('Loss')\n    plt"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":".grid(True)\n    "}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\n    #"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" Test"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" on circle dataset\n    print"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"(\"\\n"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\""}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" + \"=\""}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"*40)\n    print(\"Testing"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" on Circle Dataset\")\n    print(\""}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"=\"*40)\n    \n    "}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"X_"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"circle, y_circle = create_"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"circle_dataset()"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\n    "}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\n    # Create and train neural network for"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" circle dataset"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\n    nn_circle = SimpleN"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"euralNetwork(input_size="}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"2, hidden_size=10"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":", output_size=1, learning"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"_rate=1"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":")\n    losses"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"_circle = nn_circle.train"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"(X_circle, y_circle"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":", epochs=1000, verbose="}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"False"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":")\n    \n    # Plot"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" results\n    plt.subplot(1"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":", 2, 2)"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\n    plt.plot(losses_circle"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":")\n    plt.title('Training"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" Loss (Circle Dataset)')\n    plt"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":".xlabel('Epoch')\n    "}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"plt.ylabel('Loss')\n    "}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"plt.grid(True)\n    "}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\n    plt.tight_layout()"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\n    plt.show()\n    "}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\n    #"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" Visual"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"ize circle"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" dataset results"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\n    plt"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":".figure(figsize=(10,"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" 4"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"))\n    \n    # Original"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" data"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\n    plt.subplot(1,"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" 2, 1)\n    "}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"colors"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" = ['red'"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" if label"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" =="}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" 0"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" else 'blue' for label"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" in y_circle."}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"flatten()]\n    plt.scatter("}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"X_circle[:, 0],"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" X_circle[:, 1],"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" c=colors, alpha=0."}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"7"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":")"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\n    plt.title('Original Circle"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" Dataset')\n    plt.xlabel('"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"X1')\n    plt.ylabel"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"('X2')\n    "}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\n    # Predictions\n    plt."}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"subplot(1, 2, "}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"2)\n    predictions"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"_circle = nn_circle.predict"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"(X_circle)\n    colors"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"_"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"pre"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"d = ['red' if pre"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"d "}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"< 0."}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"5 else 'blue' for"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" pred in predictions_circle.flatten()]"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\n    plt.scatter(X_"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"circle[:, 0], X_"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"circle[:, 1], c="}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"colors_pred, alpha=0."}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"7)\n    plt.title('"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"Neural"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" Network Predictions')\n    plt."}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"xlabel('X1')\n    plt"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":".ylabel('X2')\n    "}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\n    plt.tight_layout()"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\n    plt.show()\n    "}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\n    #"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" Calculate"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" accuracy\n    predictions"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"_binary"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" = (predictions_circle > 0"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":".5).astype(int)"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\n    accuracy = np.mean("}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"predictions_binary == y_circle)"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\n    print(f\""}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"Accuracy on"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" circle dataset: {accuracy:.4f"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"}\")\n```\n\nThis implementation includes:"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\n\n##"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" Key Features"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":":\n\n1. **Architecture"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"**: One"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" hidden layer neural"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" network"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\n2. **Activation**:"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" Sigmoid function"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" with"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" its"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" derivative\n3. **Forward Propag"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"ation**: Comp"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"utes predictions"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\n4. **Backward Propag"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"ation**: Comp"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"utes gradients an"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"d updates weights\n5. **Training Loop"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"**: Iter"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"atively impro"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"ves the"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" network"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\n\n## Key"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" Components"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" Explained:\n\n- **Weights"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" Initialization**: Small random values to"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" break"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" symmetry\n- **Forwar"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"d Pass**: `"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"X"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" →"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" Hidden"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" Layer → Output Layer`\n- **"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"Loss"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" Function**: Mean Squared Error\n-"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" **Backpropagation**:"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" Chain"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" rule to"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" compute gradients\n- **Weight"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" Updates**: Gradient descent"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\n\n## Test"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" Cases"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":":\n\n1. **XOR Problem"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"**: Classic"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" non"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"-line"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"arly separable problem"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\n2. **Circle Dataset**: More"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" complex "}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"2D classification"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\n\nThe"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" network successfully"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" learns both"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" problems"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":","}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" demonst"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"rating its ability to handle"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" non"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"-linear relationships through"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" the"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" hidden layer.\n\nYou"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" can run"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" this code and experiment"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" with different:"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\n- Network"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" architectures (hidden"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" layer"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" size)"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\n- Learning"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" rates\n- Number"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" of epochs\n- Different"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" datasets"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":"\n\nThis"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" gives"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" you a solid foundation for understanding how"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" neural networks work at"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" a"}}

data: {"type":"content_block_delta","index":0,"delta":{"type":"text_delta","text":" fundamental level!"}}

data: {"type":"content_block_stop","index":0}

data: {"type":"message_delta","delta":{"stop_reason":"end_turn","stop_sequence":null},"usage":{"output_tokens":2467}}

data: {"type":"message_stop","amazon-bedrock-invocationMetrics":{"inputTokenCount":15,"outputTokenCount":2467,"invocationLatency":23762,"firstByteLatency":614}}